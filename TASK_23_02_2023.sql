SELECT 
	c.first_name ||' '|| c.last_name 
FROM 
	public.customer c
WHERE
	NOT (c.store_id IN (1) AND c.address_id  IN (2,3,4))
ORDER BY
	c.customer_id DESC
LIMIT 5
;

-- To write WHERE NOT (a IN (1) AND b IN (2)) in another way while preserving the same logic
SELECT 
	c.first_name ||' '|| c.last_name 
FROM 
	public.customer c
WHERE
	c.store_id NOT IN (1) OR c.address_id  NOT IN (2,3,4)
ORDER BY
	c.customer_id DESC
LIMIT 5
;

-- What is the average rental duration for films in the "Horror" category?
SELECT 
	f.rental_rate 
	,round(avg(f.rental_duration),2) AS avg_rental_duration
FROM 
	public.film f
	JOIN public.film_category fc ON fc.film_id = f.film_id 
	JOIN public.category c ON c.category_id = fc.category_id
WHERE 
	upper(c."name") = 'HORROR'
GROUP BY 
	f.rental_rate	
;

--What is the total revenue generated by rentals for each month in 1Q2017?
WITH tmp AS( 
SELECT 
	EXTRACT (Year FROM p.payment_date)||'-'||EXTRACT (MONTH FROM p.payment_date) AS "Year-Month"
	,sum(p.amount) AS "Amount"
FROM 
	public.film f
	JOIN public.film_actor fa ON fa.film_id = f.film_id 
	JOIN public.inventory i ON i.film_id  = f.film_id 
	JOIN public.rental r ON r.inventory_id = i.inventory_id 
	JOIN public.payment p ON p.rental_id = r.rental_id 
WHERE 
	EXTRACT (Year FROM p.payment_date) = 2017
	AND 
	EXTRACT (MONTH FROM p.payment_date) < 5
GROUP BY 
	p.payment_date
ORDER BY 
	EXTRACT (MONTH FROM p.payment_date) DESC)
SELECT
	"Year-Month"
	,to_char(sum("Amount"), '999 999.99') AS "Total_Amount"
FROM 
	tmp
GROUP BY 
	"Year-Month"
ORDER BY 
	"Year-Month" DESC
;

	
-- “What are the top and least rented (in-demand) genres and what are what are their total sales?”
WITH TopRent AS(
	SELECT
		cat."name" AS "Genre"
		, count(ren.rental_id) AS "TotalRent"
		, sum(pay.amount) AS "TotalSales"
		, dense_rank() OVER (ORDER BY count(ren.rental_id) DESC) AS rnk
	FROM 
		public.rental ren
		JOIN public.inventory inv ON inv.inventory_id  = ren.inventory_id 
		JOIN public.film fil ON fil.film_id = inv.film_id 
		JOIN public.film_category fc ON fc.film_id = fil.film_id 
		JOIN public.category cat ON cat.category_id  = fc.category_id 
		JOIN public.payment pay ON pay.rental_id = ren.rental_id 
	GROUP BY 
		cat."name"
	ORDER BY 
		count(ren.rental_id) DESC
),
BottomRent AS(
	SELECT
		cat."name" AS "Genre"
		, count(ren.rental_id) AS "TotalRent"
		, sum(pay.amount) AS "TotalSales"
		, dense_rank() OVER (ORDER BY count(ren.rental_id) ASC) AS rnk
	FROM 
		public.rental ren
		JOIN public.inventory inv ON inv.inventory_id  = ren.inventory_id 
		JOIN public.film fil ON fil.film_id = inv.film_id 
		JOIN public.film_category fc ON fc.film_id = fil.film_id 
		JOIN public.category cat ON cat.category_id  = fc.category_id 
		JOIN public.payment pay ON pay.rental_id = ren.rental_id 
	GROUP BY 
		cat."name"
	ORDER BY 
		count(ren.rental_id) ASC
)
SELECT 
	"Genre"
	,"TotalRent"
	,"TotalSales"
	,'Top 5 Rentals' as "Rank"
FROM 
	TopRent
WHERE 
	rnk<6
UNION ALL
SELECT 
	NULL,
	NULL,
	NULL,
	'-------------------------------------------'
UNION ALL 
	SELECT 
	"Genre"
	,"TotalRent"
	,"TotalSales"
	,'Bottom 5 Rentals' as "Rank"
FROM 
	BottomRent
WHERE 
	rnk<6
;

-- Can we know how many distinct users have rented Top 5 Rentals genres?
WITH TopRent AS(
	SELECT
		cat."name" AS "Genre"
		, count(ren.rental_id) AS "TotalRent"
		, sum(pay.amount) AS "TotalSales"
		, dense_rank() OVER (ORDER BY count(ren.rental_id) DESC) AS rnk
	FROM 
		public.rental ren
		JOIN public.inventory inv ON inv.inventory_id  = ren.inventory_id 
		JOIN public.film fil ON fil.film_id = inv.film_id 
		JOIN public.film_category fc ON fc.film_id = fil.film_id 
		JOIN public.category cat ON cat.category_id  = fc.category_id 
		JOIN public.payment pay ON pay.rental_id = ren.rental_id 
	GROUP BY 
		cat."name"
	ORDER BY 
		count(ren.rental_id) DESC
)
SELECT
	cust.first_name || ' ' || cust.last_name AS "FullName"
	,count(ren.customer_id) FILTER (WHERE cat."name" = 'Sports') AS "Sports"
	,count(ren.customer_id) FILTER (WHERE cat."name" = 'Animation') AS "Animation"
	,count(ren.customer_id) FILTER (WHERE cat."name" = 'Action') AS "Action"
	,count(ren.customer_id) FILTER (WHERE cat."name" = 'Sci-Fi') AS "Sci-Fi"
	,count(ren.customer_id) FILTER (WHERE cat."name" = 'Family') AS "Family"
	,count(ren.customer_id) FILTER (WHERE cat."name" IN ('Sports','Animation','Action','Sci-Fi','Family')) AS "Total"
FROM 
	public.rental ren
	JOIN public.inventory inv ON inv.inventory_id  = ren.inventory_id 
	JOIN public.film fil ON fil.film_id = inv.film_id 
	JOIN public.film_category fc ON fc.film_id = fil.film_id 
	JOIN public.category cat ON cat.category_id  = fc.category_id 
	JOIN public.payment pay ON pay.rental_id = ren.rental_id 
	JOIN public.customer cust ON cust.customer_id = ren.customer_id 
GROUP BY 
	cust.first_name || ' ' || cust.last_name
ORDER BY 
	count(ren.customer_id) FILTER (WHERE cat."name" IN ('Sports','Animation','Action','Sci-Fi','Family')) DESC
FETCH FIRST 10 ROWS WITH TIES
;